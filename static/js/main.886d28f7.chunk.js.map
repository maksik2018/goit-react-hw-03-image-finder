{"version":3,"sources":["services/FetchImages.js","services/smoothScroll.js","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.jsx","components/Button/Button.jsx","components/Searchbar/Searchbar.jsx","components/Loader/Loader.jsx","App.js","index.js"],"names":["fetchImages","query","page","a","axios","get","data","hits","smoothScroll","window","scrollTo","top","document","documentElement","scrollHeight","behavior","ImageGalleryItem","largeImageURL","webformatURL","onClick","className","src","alt","ImageGallery","gallery","map","id","tags","modalRoot","querySelector","Modal","handleOverlayClick","e","target","currentTarget","props","onClose","handleKeyDown","code","addEventListener","this","removeEventListener","createPortal","children","Component","Button","type","SearchBar","onSubmit","preventDefault","elements","searchValue","value","name","autoComplete","autoFocus","placeholder","Loader","color","height","width","timeout","App","state","isModalOpen","reqStatus","largeImgUrl","handleLoadMore","images","setState","prev","handleSubmit","handleLargeImgUrl","dataset","large","toggleModal","_","prevState","trim","length","toast","error","autoClose","console","log","galleryLength","style","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.886d28f7.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst KEY = \"22615955-8cacb706f354043da71650c83\";\r\nconst BASE_URL = \"https://pixabay.com/api/\";\r\n\r\nexport const fetchImages = async (query, page) => {\r\n  const { data } = await axios.get(\r\n    `${BASE_URL}?q=${query}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n  );\r\n  return data.hits;\r\n};\r\n","export const smoothScroll = () =>\r\n  window.scrollTo({\r\n    top: document.documentElement.scrollHeight,\r\n    behavior: \"smooth\",\r\n  });\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ImageGalleryItem({ largeImageURL, webformatURL, onClick }) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        data-large={largeImageURL}\r\n        onClick={onClick}\r\n        src={webformatURL}\r\n        alt=\"\"\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  webformatURL: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\n\r\nexport default function ImageGallery({ gallery, onClick }) {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {gallery.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          webformatURL={webformatURL}\r\n          largeImageURL={largeImageURL}\r\n          tags={tags}\r\n          onClick={onClick}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array,\r\n  onClick: PropTypes.func,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n  handleOverlayClick = (e) => {\r\n    if (e.target === e.currentTarget) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  render() {\r\n    return createPortal(\r\n      <div onClick={this.handleOverlayClick} className=\"Overlay\">\r\n        {/* <div className=\"Modal\"></div> */}\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Button({ onClick, children }) {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","// import PropTypes from 'prop-types';\r\n// // import s from './Searchbar.module.css';\r\n\r\n// function Searchbar({ onHandleSubmit, onSearchQueryChange, value }) {\r\n//   return (\r\n//     <header onSubmit={onHandleSubmit} className=\"Searchbar\">\r\n//   <form className=\"SearchForm\">\r\n//     <button type=\"submit\" className=\"SearchForm__button\">\r\n//       <span className=\"SearchForm__buttonLabel\">Search</span>\r\n//     </button>\r\n\r\n//     <input\r\n//       className=\"SearchForm__input\"\r\n//       type=\"text\"\r\n//       autoComplete=\"off\"\r\n//       autoFocus\r\n//       value={value}\r\n//       onChange={onSearchQueryChange}\r\n//       placeholder=\"Search images and photos\"\r\n//     />\r\n//   </form>\r\n// </header>\r\n//   );\r\n// }\r\n\r\n// Searchbar.propTypes = {\r\n//   onHandleSubmit: PropTypes.func.isRequired,\r\n//   onSearchQueryChange: PropTypes.func.isRequired,\r\n//   value: PropTypes.string.isRequired,\r\n// };\r\n\r\n// export default Searchbar;\r\n\r\nimport React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction SearchBar({ onSubmit }) {\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(e.target.elements.searchValue.value);\r\n  };\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form onSubmit={handleSearch} className=\"SearchForm\">\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          name=\"searchValue\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images\"\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n\r\n  \r\n}\r\nSearchBar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from \"react\";\r\nimport Spinner from \"react-loader-spinner\";\r\nexport class Loader extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Spinner\">\r\n        <Spinner type=\"Puff\" color=\"#00BFFF\" height={100} width={100}  timeout={700}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loader;","import { Component } from \"react\";\nimport { fetchImages } from \"./services/FetchImages\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { smoothScroll } from \"./services/smoothScroll\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery.jsx\";\nimport Modal from \"./components/Modal/Modal.jsx\";\nimport Button from \"./components/Button/Button.jsx\";\nimport SearchBar from \"./components/Searchbar/Searchbar.jsx\";\nimport Loader from \"./components/Loader/Loader.jsx\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nexport default class App extends Component {\n  state = {\n    searchValue: \"\",\n    gallery: [],\n    page: 1,\n    isModalOpen: false,\n    reqStatus: \"idle\",\n    largeImgUrl: \"\",\n  };\n\n  async componentDidUpdate(_, prevState) {\n    const { searchValue, page } = this.state;\n    try {\n      if (prevState.searchValue !== this.state.searchValue) {\n        this.setState({\n          reqStatus: \"pending\",\n          largeImgUrl: \"\",\n        });\n        const images = await fetchImages(searchValue, page);\n\n        if (searchValue.trim() === \"\") {\n          return;\n        }\n\n        if (images.length === 0) {\n          toast.error(\n            \"Sorry, there are no images matching your search query. Please try again.\",\n            {\n              autoClose: 3000,\n            }\n          );\n        }\n\n        this.setState((prev) => ({\n          reqStatus: \"resolved\",\n          gallery: images,\n          page: prev.page + 1,\n        }));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  handleLoadMore = async () => {\n    const { searchValue, page } = this.state;\n    const images = await fetchImages(searchValue, page);\n    this.setState((prev) => ({\n      gallery: [...prev.gallery, ...images],\n      page: prev.page + 1,\n      reqStatus: \"pending\",\n    }));\n\n    smoothScroll();\n  };\n\n  handleSubmit = (searchValue) => {\n    this.setState({\n      searchValue,\n      page: 1,\n      reqStatus: \"pending\",\n    });\n  };\n\n  handleLargeImgUrl = (e) => {\n    this.setState({\n      isModalOpen: true,\n      largeImgUrl: e.target.dataset.large,\n    });\n  };\n\n  toggleModal = () => {\n    this.setState({\n      isModalOpen: false,\n    });\n  };\n\n  render() {\n    const { gallery, reqStatus, isModalOpen, largeImgUrl } = this.state;\n    const galleryLength = gallery.length > 1;\n\n    // if (reqStatus === \"pending\") {\n    //   return (\n    //     <Loader\n    //       type=\"Puff\"\n    //       color=\"#00BFFF\"\n    //       height={100}\n    //       width={100}\n    //       timeout={1000}\n    //     />\n    //   );\n    // }\n    return (\n      <div className=\"Container\">\n        <SearchBar onSubmit={this.handleSubmit} />\n        <ImageGallery onClick={this.handleLargeImgUrl} gallery={gallery} />\n        {reqStatus === \"pending\" && <Loader />}\n        {galleryLength && (\n          <Button onClick={this.handleLoadMore}>Load more</Button>\n        )}\n        {isModalOpen && (\n          <Modal src={largeImgUrl} onClose={this.toggleModal}>\n            <div style={{ width: 900 }}>\n              <img src={largeImgUrl} alt=\"\" />\n            </div>\n          </Modal>\n        )}\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}